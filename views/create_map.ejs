<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <style>
    #map {
        height: 400px;
        width: 75%;
    }
  </style>
<!-- Requiring jQuery from host server -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<!-- <script type="text/javascript" src="scripts/create_map.js"></script> -->

</head>
<body>
  <h1>Your New Map!</h1>
<!-- City Form -->
<form id="cityForm">
  <label for="cityName">City Name</label><br>
  <input type="text" name="cityName" id="cityName"><br>
  <label for="countryName">Country Name</label><br>
  <input type="text" name="countryName" id="countryName"><br>
  <button type='submit' class='cityCountryButton'>Show map!</button>
</form>

<!-- Map -->
  <div id="map">
  </div>

  <!-- Point Form -->
  <form id="pointForm">
    <label for="pointTitle">Point Title</label><br>
    <input type="text" name="pointTitle" id="pointTitle"><br>
    <label for="pointDescription">Point Description</label><br>
    <input type="text" name="pointDescription" id="pointDescription"><br>
    <label for="category">Choose a category:</label>
    <select name="category" id="category">
      <option value="Food">Food</option>
      <option value="Shopping">Shopping</option>
      <option value="Nature">Nature</option>
      <option value="Nightlife">Nightlife</option>
    </select>
    <button type='submit' class='pointButton'>Create Point</button>
  </form>

  <!-- This is where the individual marker coords are displayed and fetched for the generation of each markers array element -->
  <div id="marker_coords">
  </div>

  <!-- This is where all saved points are displayed -->
  <table id="pointsList">
  </table>

<!-- Maps Form -->
<form id="mapsForm">
  <label for="mapTitle">Map Title</label><br>
  <input type="text" name="mapTitle" id="mapTitle"><br>
  <label for="mapDescription">Map Description</label><br>
  <input type="text" name="mapDescription" id="mapDescription"><br>
  <button type='submit' class='pointButton'>Save Map</button>
</form>
  <!-- SCRIPTS -->
<script>

const visualMarkers = [];

  //Array of marker data (this is what's later inserted into the points DB)
  const markers = [
      {
          coordinates:{lat:29.9841,lng:-90.1529},
          iconImage:'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',
          pointTitle:'test1',
          pointDescription:'test1',
          category:'Food'
      },
      {
          coordinates:{lat:29.9146,lng:-90.0540},
          pointTitle:'test2',
          pointDescription:'test2',
          category:'Shopping'
      },
      {
          coordinates:{lat:30.4583,lng:-91.1403},
          pointTitle:'test3',
          pointDescription:'test3',
          category:'Nightlife'
      }
  ];



  // this generates the individual point elements within div tags (displayed in #pointsList)
  const generatePointsList = function(markers){
    console.log("generatePointsList", markers);

    let t = `<tr>
                <th >Title</th>
                <th>Description</th>
                <th>Lat</th>
                <th>Long</th>
                <th>Delete Point</th>
            </tr>`;
    for (let i = 0; i < markers.length; i++){
      let tr = `<tr id = ${markers[i].pointTitle}>`;
      tr += "<td>"+markers[i].pointTitle+"</td>";
      tr += "<td>"+markers[i].pointDescription+"</td>";
      tr += "<td id = 'lat'>"+markers[i].coordinates.lat+"</td>";
      tr += "<td id = 'long'>"+markers[i].coordinates.lng+"</td>";
      tr += "<td>"+`<input type='button' value='Delete Point' class='removeItem'>`+"</td>";
      // tr += "<td>"+"<input type='button' value='Delete Row' onclick='deleteRowFunction()'>"+"</td>";
      // tr += "<td>"+"delete icon here"+"</td>";
      tr += "</tr>";
      t += tr;
    }
      document.getElementById("pointsList").innerHTML = t;
    };

    // event listener for clicks onto any "delete point" button - removes the HTML element and marker from markers array (so it's not submitted to the DB when we save the map)
    const pointsTable = document.getElementById('pointsList');
    pointsTable.addEventListener('click', (event) => {
      console.log(event.target.parentNode.parentNode.id);
      console.log(event.target.parentNode);
      if (!event.target.classList.contains('removeItem')) {
        return;
      }
      // determines the point title of the row we just deleted to also remove it from the markers table
      const deletedPointTitle = event.target.parentNode.parentNode.id;
      // console.log(markers);

      // removes the marker from the markers array using the id - WARNING, each point title must be unique
      for (let i = 0; i < markers.length; i++) {
        if (markers[i].pointTitle === deletedPointTitle) {
          // this removes the marker (aka point) we deleted from the markers array
          markers.splice(i, 1);
          console.log(markers);
        }
      }
      console.log('before the visualMarker loop');
      for (const visualMarker of visualMarkers) {
        for (let j = 0; j < markers.length; j++) {
          if (markers[j].coordinates.lat == visualMarker.coordinates.lat() && markers[j].coordinates.lng == visualMarker.coordinates.lng()) {
            visualMarker.setMap(null);
            setMapOnAll(map);
          }
        }
      }
      console.log('after the visualMarker loop');

      // this deletes the actual HTML element from the DOM
      event.target.parentNode.parentNode.remove();
      event.preventDefault();

    });

    // Initializes the Google map based on currently hard-coded lat, long values
    function initMap() {
      //set up initial map for New Orleans as default
      const options = {  // Creates map options to add to the default map.
          zoom:8,
          center:{lat:51.0447,lng:-114.0719}
      }
      //let map = new google.maps.Map(document.getElementById('map'), options); //Creates the map and includes the options.
      let map = new google.maps.Map(document.getElementById('map'), options); //Creates the map and includes the options

      function setMapOnAll(map) {
        for (let i = 0; i < visualMarkers.length; i++) {
        visualMarkers[i].setMap(map);
        }
      }

      setMapOnAll(map);

      //render map of user input location (for now, Vancouver or Calgary only)
      document.getElementById("cityForm").addEventListener('submit', () => {
        event.preventDefault();
        let cityName = document.getElementById("cityName").value;
        //console.log("cityName",cityName);
        if (cityName === "Vancouver") {
          map.setCenter({
            lat: 49.2827,
            lng: -123.1207
          });
        }
        if (cityName === "Calgary") {
          map.setCenter({
            lat: 51.0447,
            lng: -114.0719
          });
        }
      });

      //Listen for click on map
      google.maps.event.addListener(map, 'click', function(event){
          addMarker({coordinates:event.latLng}); //Add marker
          // setMapOnAll(map);
          document.getElementById("marker_coords").innerHTML=event.latLng.toUrlValue();
          console.log(visualMarkers[0].coordinates.lat());
          console.log(visualMarkers[0].coordinates.lng());
        });

      // Listens for the submission of the pointForm button which then creates a markerElement containing coordinates (lat, lng), pointTitle, pointDescription
      document.getElementById("pointForm").addEventListener('submit',(event) => {
        event.preventDefault();
        //console.log("event", event);
        //console.log("pointTitle", document.getElementById("pointTitle").value);

          markers.push(
            {
              coordinates: {
                lat:document.getElementById("marker_coords").innerHTML.split(',')[0],
                lng:document.getElementById("marker_coords").innerHTML.split(',')[1]
              },
              pointTitle: document.getElementById("pointTitle").value,
              pointDescription: document.getElementById("pointDescription").value,
              category: document.getElementById("category").value
            }
          );
        // console.log(markers);
        generatePointsList(markers);
      });

      document.getElementById("mapsForm").addEventListener('submit', (event) => {
        event.preventDefault();

        $.ajax({
          url: '/api/maps/create',
          method: "POST",
          data: {
            markers,
            mapTitle: document.getElementById("mapTitle").value,
            mapDescription: document.getElementById("mapDescription").value
            }
        })
        .then((result)=>{
          //does nothing
        })
        .catch((error)=>{
          console.log('error:',error);
        });
      });

      console.log('outside markers', markers);

      function addMarker(props) {
              const marker = new google.maps.Marker({
              position:props.coordinates,
              map:map,
          });
          // sends newly created marker into visualMarkers array with the coordinates
          visualMarkers.push({marker, coordinates: props.coordinates});
          console.log("just updated visualMarkers:", visualMarkers)

          // if(props.iconImage) {  //Check for custom icon
          //   marker.setIcon(props.iconImage); //Set icon image
          // }

          // if(props.content) { //Check content
          //   let infoWindow = new google.maps.InfoWindow({
          //     content:props.content
          //   });

          //   // marker.addListener('click', function() {
          //   //   infoWindow.open(map,marker);
          //   // });
          // }
      }
  }
</script>

  <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDMNp3SzabTd8aZW6jzofga5kNv8K6sy9U&callback=initMap">
  </script>

</body>
</html>
